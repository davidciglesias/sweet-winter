{"version":3,"sources":["components/actuator.js","components/cat.js","components/score.js","components/filler.js","components/levelBar.js","components/elementIcon.js","components/catstateHandler.js","App.js","serviceWorker.js","index.js","components/meow.mp3","winter.svg","winterFood.svg","winterPoop.svg","winterGame.svg","baseline-pets-24px.svg"],"names":["playLow","Cat","react_default","a","createElement","className","transform","cx","cy","r","_ref","logo","name","react_svg","src","Score","value","parseInt","this","props","Component","_handleClick","label","onClick","event","preventDefault","play","themeRed","createMuiTheme","palette","primary","red","typography","useNextVariants","themePurple","purple","themeYellow","main","themeGreen","secondary","light","contrastText","Actuator","theme","option","Fragment","styles","key","meow","ref","low","Button_default","disabled","enabled","variant","color","cssRoot","fullWidth","FillerStyle","styled","div","_templateObject","Filler","style","width","concat","decrease","progress","float","right","ProgressBar","levelBar_templateObject","LevelBar","filler","ElementIcon","icon","React","PureComponent","CatStateHandler","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","restartInterval","clearInterval","interval","setInterval","tick","period","componentDidMount","setState","currentLevel","initialLevel","setTimeout","Math","random","componentWillUnmount","isTheActuatorEnabled","state","minActuatorLevel","message","targetClick","bind","assertThisInitialized","nextLevel","actuatorDecreaseLevel","minLevel","reduceLevel","level","score","maxLevel","probabilityOfIncrease","prevState","onTick","calculateScoreBasedOnLevel","isActuatorEnabled","elementIcon","levelBar","actuator","App","fetch","method","headers","Accept","then","response","text","resultText","result","JSON","parse","console","log","seconds","poo_level","poo_levels","play_level","play_levels","pet_level","pet_levels","feed_level","feed_levels","scoreTick","Content-Type","mode","body","json","newState","postNewLevel","Grid_default","container","spacing","justify","item","xs","xl","catstateHandler","actuatorDecreaseLevelCrit","actuatorCritChance","actuatorCooldownMs","winterPoop","winterGame","alignContent","cat","winterFood","winterPet","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"qGA8DIA,uNC7CWC,GAbXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBACTJ,EAAAC,EAAAC,cAAA,UAAQG,GAAG,KAAKC,GAAG,IAAIC,EAAE,UAIzB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,KAAR,OACRV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,IAAKH,IACfT,EAAAC,EAAAC,cAAA,SAAIQ,MCEGG,mLAVP,IAAIC,EAAQC,SAASC,KAAKC,MAAMH,OAEhC,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBAAeY,WAPXI,yFFKdC,EAAe,SAACC,EAAOC,EAASC,GAClCA,EAAMC,iBACNF,EAAQD,GACRtB,EAAQ0B,QAGNC,EAAWC,yBAAe,CAC5BC,QAAS,CACPC,QAASC,KAEXC,WAAY,CACVC,iBAAiB,KAGjBC,EAAcN,yBAAe,CAC/BC,QAAS,CACLC,QAASK,KAEbH,WAAY,CACRC,iBAAiB,KAGfG,EAAcR,yBAAe,CACnCC,QAAS,CACLC,QAAS,CACTO,KAAK,YAGTL,WAAY,CACRC,iBAAiB,KAInBK,EAAaV,yBAAe,CAC9BC,QAAS,CACPC,QAAS,CAEPO,KAAM,WAIRE,UAAW,CACTC,MAAO,UACPH,KAAM,UAENI,aAAc,WAGhBT,WAAY,CACVC,iBAAiB,MAwDTS,MAhDhB,SAAkBvB,GAEd,IAAIwB,EAEJ,OAAOxB,EAAMyB,QACT,IAAK,MACDD,EAAQhB,EACR,MACJ,IAAK,SACDgB,EAAQP,EACR,MACJ,IAAK,SACDO,EAAQL,EACR,MACJ,IAAK,QACDK,EAAQT,EAQhB,OAEIhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACI3C,EAAAC,EAAAC,cAAC0C,EAAA,iBAAD,CAAkBH,MAAOA,GAErBzC,EAAAC,EAAAC,cAAA,SACI2C,IAAKC,IACLC,IAAK,SAACC,GAAUlD,EAAUkD,GAC1BpC,IAAKkC,MAET9C,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACIiD,UAAWjC,EAAMkC,QACjB9B,QAAS,SAACC,GAAD,OAAWH,EAAaF,EAAMG,MAAOH,EAAMI,QAASC,IAC7D8B,QAAQ,YACRC,MAAM,UACNlD,UAAWc,EAAMqC,QACjBC,WAAW,GAEdtC,EAAMG,uMGtGvB,IAAMoC,EAAcC,IAAOC,IAAVC,KAeFC,EATA,SAAC3C,GAAD,OAEPjB,EAAAC,EAAAC,cAACsD,EAAD,CAAaK,MACT,CACIC,MAAK,GAAAC,OAAK9C,EAAM+C,SAAW,IAAM/C,EAAMgD,SAAWhD,EAAMgD,SAAnD,KACLC,MAAK,GAAAH,OAAK9C,EAAMkD,MAAQ,QAAU,wOCTlD,IAAMC,EAAcX,IAAOC,IAAVW,KAsBFC,EAdE,SAACrD,GAGd,OACIjB,EAAAC,EAAAC,cAACkE,EAAD,KACIpE,EAAAC,EAAAC,cAACqE,EAAD,CACIN,SAAUhD,EAAMgD,SAChBD,SAAU/C,EAAM+C,SAChBG,MAAOlD,EAAMkD,UCRdK,mLARP,OACIxE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACI3C,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAUC,IAAKI,KAAKC,MAAMwD,eAJhBC,IAAMC,eCqGjBC,eAlGX,SAAAA,EAAY3D,GAAO,IAAA4D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAA4D,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlE,KAAMC,KAgDVkE,gBAAkB,WACdC,cAAcP,EAAKQ,UACnBR,EAAKQ,SAAWC,YAAY,WACxBT,EAAKU,QACNV,EAAK5D,MAAMuE,SArDCX,EAwDnBY,kBAAoB,WAChBZ,EAAKa,SAAS,CACVC,aAAcd,EAAK5D,MAAM2E,eAE7BC,WAAWhB,EAAKM,kBAAmC,IAAhBW,KAAKC,WA5DzBlB,EA+DnBmB,qBAAuB,WACrBZ,cAAcP,EAAKQ,WAhEFR,EAoEnBoB,qBAAuB,WACnB,OAAOpB,EAAKqB,MAAMP,cAAgBd,EAAK5D,MAAMkF,kBAnE7CtB,EAAKqB,MAAQ,CACT9E,MAAOH,EAAMG,MACbuE,aAAc1E,EAAM2E,aACpBQ,QAAS,IAEbvB,EAAKwB,YAAcxB,EAAKwB,YAAYC,KAAjBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KAPJA,6EAaf,IAAI2B,EAAYxF,KAAKkF,MAAMP,aAAe3E,KAAKC,MAAMwF,sBAClDD,EAAYxF,KAAKC,MAAMyF,WAAUF,EAAYzF,SAASC,KAAKC,MAAMyF,WACpE1F,KAAK0E,SACD,CACIC,aAAca,EACdJ,QAAS,IAAMpF,KAAKC,MAAMwF,8DAMlCzF,KAAKmE,kBACLnE,KAAK2F,iEAGkBC,GACvB,MAAO,CACHC,OAAQ7F,KAAKC,MAAM6F,SAAWF,GAAS5F,KAAKC,MAAM6F,SAClDF,MAAO5F,KAAKkF,MAAMP,aAClBvE,MAAOJ,KAAKC,MAAMG,sCAKtB,IAAIoF,EAAYzF,SAASC,KAAKkF,MAAMP,cACjC3E,KAAKkF,MAAMP,aAAe3E,KAAKC,MAAM6F,UAAYhB,KAAKC,UAAY/E,KAAKC,MAAM8F,sBAAsB,KAClG/F,KAAK0E,SACD,SAACsB,GAEG,MAAO,CAACrB,aADRa,EAAYzF,SAASiG,EAAUrB,cAAgB,KAK3D3E,KAAKC,MAAMgG,OAAOjG,KAAKkG,2BAA2BV,qCA4BlD,IAAMW,EAAoBnG,KAAKiF,uBAE/B,OACIjG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACI3C,EAAAC,EAAAC,cAACkH,EAAD,CAAa3C,KAAMzD,KAAKC,MAAMwD,OAC9BzE,EAAAC,EAAAC,cAACmH,EAAD,CACIrD,SAAUhD,KAAKC,MAAM+C,SACrBC,SAAUjD,KAAKkF,MAAMP,aAAa3E,KAAKC,MAAM6F,SAAS,IACtDzD,MAAOrC,KAAKC,MAAMoC,MAClBc,MAAOnD,KAAKC,MAAMkD,QAEtBnE,EAAAC,EAAAC,cAACoH,EAAD,CACIlG,MAAOJ,KAAKC,MAAMG,MAClB+B,QAASgE,EACT9F,QAASL,KAAKqF,YACdhD,MAAOrC,KAAKC,MAAMoC,MAClBX,OAAQ1B,KAAKC,MAAMwB,gBA3FTvB,gCCwNfqG,eAhNb,SAAAA,EAAYtG,GAAO,IAAA4D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAAuG,IACjB1C,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAyC,GAAArC,KAAAlE,KAAMC,KAeRwE,kBAAoB,WAClB+B,MAAM,4CAA6C,CAC/CC,OAAQ,MACRC,QAAS,CACPC,OAAU,gBAEbC,KAAK,SAACC,GACPA,EAASC,OAAOF,KAAK,SAACG,GAClB,IAAIC,EAASC,KAAKC,MAAMH,GACxBI,QAAQC,IAAIJ,GACZnD,EAAKa,SACH,CACE2C,QAAS,EACTxB,MAAOmB,EAAOnB,MACdyB,UAAWN,EAAOO,WAClBC,WAAYR,EAAOS,YACnBC,UAAUV,EAAOW,WACjBC,WAAYZ,EAAOa,mBA/B7BhE,EAAKwB,YAAcxB,EAAKwB,YAAYC,KAAjBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACnBA,EAAKiE,UAAYjE,EAAKiE,UAAUxC,KAAfxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACjBA,EAAKqB,MACH,CACEmC,QAAS,EACTxB,MAAO,EACPyB,UAAW,KACXE,WAAY,KACZE,UAAW,KACXE,WAAY,MAXC/D,sMA0CX2C,MAAM,wCAAyC,CACjDC,OAAQ,OACRC,QAAS,CACPqB,eAAe,oBAEjBC,KAAM,UACNC,KAAI,mCAAAlF,OACW/C,KAAKkF,MAAMoC,UADtB,4BAAAvE,OAEW/C,KAAKkF,MAAMwC,UAFtB,6BAAA3E,OAGY/C,KAAKkF,MAAMsC,WAHvB,6BAAAzE,OAIY/C,KAAKkF,MAAM0C,WAJvB,wBAAA7E,OAKO/C,KAAKkF,MAAMW,MALlB,OAOLe,KAAK,SAACC,GACPM,QAAQC,IAAI,kJAINc,GACR,IAAIC,EAAW,GAEf,OADAnI,KAAKoI,eACEF,EAAK9H,OACV,IAAK,kBACH+H,EAASb,UAAYY,EAAKtC,MAC1B,MACF,IAAK,gBACHuC,EAASX,WAAaU,EAAKtC,MAC7B,MACA,IAAK,WACHuC,EAASP,WAAaM,EAAKtC,MAC7B,MACA,IAAK,UACHuC,EAAST,UAAYQ,EAAKtC,MAK9B5F,KAAK0E,SAAS,SAACQ,GAEb,OADAiD,EAAStC,MAAQX,EAAMW,MAAQqC,EAAKrC,MAC7BsC,wCAIC/H,GACV+G,QAAQC,IAAIhH,EAAQ,kDAIpB,OAEIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMqJ,WAAS,EAACC,QAAS,EAAGC,QAAQ,gBAChCxJ,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMwJ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACM,OAAzB3I,KAAKkF,MAAMoC,UACZtI,EAAAC,EAAAC,cAAC0J,GAAD,CACE3C,OAAQjG,KAAK8H,UACbtD,OAAO,OACPkB,SAAS,IACTI,SAAS,KACT1F,MAAM,kBACN+E,iBAAiB,IACjBM,sBAAsB,KACtBoD,0BAA0B,KAC1BC,mBAAmB,KACnBC,mBAAmB,MACnB1I,QAASL,KAAKqF,YACdU,sBAAsB,KACtBtE,MAAO,QACPuB,UAAU,EACVG,OAAO,EACPM,KAAMuF,IACNpE,aAAc5E,KAAKkF,MAAMoC,YAGzBtI,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMwJ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACI,OAAzB3I,KAAKkF,MAAMoC,UACVtI,EAAAC,EAAAC,cAAC0J,GAAD,CACE3C,OAAQjG,KAAK8H,UACbtD,OAAO,OACPkB,SAAS,IACTI,SAAS,KACT1F,MAAM,gBACN+E,iBAAiB,IACjBM,sBAAsB,KACtBoD,0BAA0B,KAC1BC,mBAAmB,KACnBC,mBAAmB,MACnB1I,QAASL,KAAKqF,YACdU,sBAAsB,KACtBtE,MAAO,SACPuB,UAAU,EACVG,OAAO,EACPM,KAAMwF,IACNrE,aAAc5E,KAAKkF,MAAMsC,aAG7BxI,EAAAC,EAAAC,cAAA,cAGFF,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMqJ,WAAS,EAACY,aAAa,SAASV,QAAQ,UAC5CxJ,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMwJ,MAAI,EAACC,GAAI,IACb1J,EAAAC,EAAAC,cAAC2G,EAAD,CAAO/F,MAAOE,KAAKkF,MAAMW,QACzB7G,EAAAC,EAAAC,cAACiK,EAAD,CAAK1J,KAAMA,IAAMC,KAAK,aAG1BV,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMqJ,WAAS,EAACC,QAAS,EAAGC,QAAQ,gBAClCxJ,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMwJ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACM,OAAzB3I,KAAKkF,MAAMoC,UACZtI,EAAAC,EAAAC,cAAC0J,GAAD,CACE3C,OAAQjG,KAAK8H,UACbtD,OAAO,MACPkB,SAAS,IACTI,SAAS,KACT1F,MAAM,WACN+E,iBAAiB,IACjBM,sBAAsB,KACtBoD,0BAA0B,KAC1BC,mBAAmB,KACnBC,mBAAmB,MACnB1I,QAASL,KAAKqF,YACdU,sBAAsB,KACtBtE,MAAO,MACPuB,UAAU,EACVG,OAAO,EACPM,KAAM2F,IACNxE,aAAc5E,KAAKkF,MAAM0C,aAG3B5I,EAAAC,EAAAC,cAAA,aAEFF,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,CAAMwJ,MAAI,EAACC,GAAI,EAAGC,GAAI,GACM,OAAzB3I,KAAKkF,MAAMoC,UACZtI,EAAAC,EAAAC,cAAC0J,GAAD,CACE3C,OAAQjG,KAAK8H,UACbtD,OAAO,MACPkB,SAAS,IACTI,SAAS,KACT1F,MAAM,UACN+E,iBAAiB,IACjBM,sBAAsB,KACtBoD,0BAA0B,KAC1BC,mBAAmB,KACnBC,mBAAmB,MACnB1I,QAASL,KAAKqF,YACdU,sBAAsB,KACtBtE,MAAO,SACPuB,UAAU,EACVG,OAAO,EACPM,KAAM4F,IACNzE,aAAc5E,KAAKkF,MAAMwC,YAG3B1I,EAAAC,EAAAC,cAAA,uBAvMEgB,aCAEoJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5K,EAAAC,EAAAC,cAAC2K,GAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC,mCE/HnBC,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9abe5816.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport { MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles'\r\nimport red from '@material-ui/core/colors/red'\r\nimport purple from '@material-ui/core/colors/purple'\r\nimport meow from './meow.mp3'\r\n\r\nconst _handleClick = (label, onClick, event) => {\r\n    event.preventDefault();\r\n    onClick(label);\r\n    playLow.play();\r\n};\r\n\r\nconst themeRed = createMuiTheme({\r\n    palette: {\r\n      primary: red,\r\n    },\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n  });\r\nconst themePurple = createMuiTheme({\r\n    palette: {\r\n        primary: purple,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    });\r\n    const themeYellow = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n        main:\"#ffcc00\",\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n\r\nconst themeGreen = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        // light: will be calculated from palette.primary.main,\r\n        main: '#1fa1a1',\r\n        // dark: will be calculated from palette.primary.main,\r\n        // contrastText: will be calculated to contrast with palette.primary.main\r\n      },\r\n      secondary: {\r\n        light: '#0066ff',\r\n        main: '#0044ff',\r\n        // dark: will be calculated from palette.secondary.main,\r\n        contrastText: '#ffcc00',\r\n      },\r\n  \r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      // error: will use the default color\r\n    },\r\n  });\r\n\r\nvar playLow\r\n\r\nfunction Actuator(props) {\r\n    \r\n    var theme\r\n        \r\n    switch(props.option) {\r\n        case 'red':\r\n            theme = themeRed\r\n            break\r\n        case 'yellow':\r\n            theme = themeYellow\r\n            break\r\n        case 'purple':\r\n            theme = themeGreen\r\n            break\r\n        case 'green':\r\n            theme = themePurple\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n            <MuiThemeProvider theme={theme}>\r\n\r\n                <audio\r\n                    key={meow}\r\n                    ref={(low) => { playLow = low; }}\r\n                    src={meow}\r\n                />\r\n                <Button \r\n                    disabled={!props.enabled}\r\n                    onClick={(event) => _handleClick(props.label, props.onClick, event)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={props.cssRoot}\r\n                    fullWidth={true}\r\n                >\r\n                {props.label}\r\n                </Button>\r\n            </MuiThemeProvider>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default (Actuator)","import React from 'react';\r\nimport ReactSVG from 'react-svg'\r\n\r\nconst rEye = \r\n    <svg className=\"rightEye\">\r\n        <g transform=\"translate(100,0)\">\r\n            <circle cx=\"50\" cy=\"0\" r=\"100\"/>\r\n        </g>\r\n    </svg>\r\n\r\nconst Cat = ({logo, name}) => (\r\n    <div>\r\n        <ReactSVG src={logo}></ReactSVG>\r\n        <p>{name}</p>\r\n    </div>\r\n)\r\n\r\nexport default Cat","import React, { Component } from 'react';\r\n\r\nclass Score extends Component{\r\n\r\n    render() {\r\n        var value = parseInt(this.props.value)\r\n\r\n        return (\r\n            <div>\r\n                <label>Score: {value}</label>      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Score","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst FillerStyle = styled.div`\r\n  background: #1DA598;\r\n  height: 100%;\r\n  border-radius: inherit;\r\n  transition: width .2s ease-in;\r\n`\r\nconst Filler = (props) => \r\n    (\r\n        <FillerStyle style={\r\n            { \r\n                width: `${props.decrease ? 100 - props.progress : props.progress}%`,\r\n                float: `${props.right ? \"right\" : \"left\"}`\r\n            }} />\r\n    );\r\n\r\nexport default Filler;","import React from 'react';\r\nimport Filler from './filler'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst ProgressBar = styled.div`\r\n    position: relative;\r\n    background-color: white;\r\n    height: 20px;\r\n    border-radius: 50px;\r\n    border: 1px solid rgba(255, 255, 255, .25);\r\n`\r\n\r\nconst LevelBar = (props) => {\r\n\r\n\r\n    return (\r\n        <ProgressBar>\r\n            <Filler \r\n                progress={props.progress}\r\n                decrease={props.decrease}\r\n                right={props.right}\r\n            />\r\n        </ProgressBar>\r\n    )\r\n}\r\n\r\nexport default LevelBar","import React from 'react';\r\nimport ReactSVG from 'react-svg'\r\n\r\nclass ElementIcon extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <>\r\n                <ReactSVG src={this.props.icon}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ElementIcon","import React, {Component} from 'react'\r\nimport Actuator from './actuator';\r\nimport LevelBar from './levelBar';\r\nimport ElementIcon from './elementIcon';\r\n\r\nclass CatStateHandler extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            label: props.label,\r\n            currentLevel: props.initialLevel,\r\n            message: \"\",\r\n        }\r\n        this.targetClick = this.targetClick.bind(this)\r\n    }    \r\n\r\n    interval;\r\n\r\n    reduceLevel() {\r\n        var nextLevel = this.state.currentLevel - this.props.actuatorDecreaseLevel\r\n        if(nextLevel < this.props.minLevel) nextLevel = parseInt(this.props.minLevel)\r\n        this.setState(\r\n            {\r\n                currentLevel: nextLevel,\r\n                message: \"-\" + this.props.actuatorDecreaseLevel\r\n            }\r\n        )\r\n    }\r\n\r\n    targetClick() {\r\n        this.restartInterval()\r\n        this.reduceLevel()\r\n    }\r\n\r\n    calculateScoreBasedOnLevel(level) {\r\n        return {\r\n            score: (this.props.maxLevel - level) / this.props.maxLevel,\r\n            level: this.state.currentLevel,\r\n            label: this.props.label\r\n        }\r\n    }\r\n    \r\n    tick() {\r\n        var nextLevel = parseInt(this.state.currentLevel)\r\n        if(this.state.currentLevel < this.props.maxLevel && Math.random() <= this.props.probabilityOfIncrease/100){\r\n            this.setState(\r\n                (prevState) => { \r\n                    nextLevel = parseInt(prevState.currentLevel) + 1\r\n                    return {currentLevel: nextLevel }\r\n                }\r\n            )\r\n        }\r\n        this.props.onTick(this.calculateScoreBasedOnLevel(nextLevel))\r\n    }\r\n\r\n    restartInterval = () => {\r\n        clearInterval(this.interval)\r\n        this.interval = setInterval(() => {\r\n            this.tick()\r\n        }, this.props.period);\r\n      }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            currentLevel: this.props.initialLevel\r\n        })\r\n        setTimeout(this.restartInterval(), Math.random() * 500)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      clearInterval(this.interval)\r\n    }\r\n    \r\n\r\n    isTheActuatorEnabled = () => {\r\n        return this.state.currentLevel >= this.props.minActuatorLevel\r\n    }\r\n\r\n    render() {\r\n       \r\n        const isActuatorEnabled = this.isTheActuatorEnabled()\r\n\r\n        return (\r\n            <>\r\n                <ElementIcon icon={this.props.icon}/>\r\n                <LevelBar\r\n                    decrease={this.props.decrease} \r\n                    progress={this.state.currentLevel/this.props.maxLevel*100}\r\n                    color={this.props.color} \r\n                    right={this.props.right}   \r\n                    />\r\n                <Actuator \r\n                    label={this.props.label} \r\n                    enabled={isActuatorEnabled} \r\n                    onClick={this.targetClick}\r\n                    color={this.props.color}\r\n                    option={this.props.theme}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CatStateHandler","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport logo from './winter.svg';\r\nimport winterFood from './winterFood.svg';\r\nimport winterPoop from './winterPoop.svg';\r\nimport winterGame from './winterGame.svg';\r\nimport winterPet from './baseline-pets-24px.svg';\r\nimport Cat from './components/cat';\r\nimport Score from './components/score'\r\nimport CatStateHandler from './components/catstateHandler';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.targetClick = this.targetClick.bind(this);\r\n    this.scoreTick = this.scoreTick.bind(this);\r\n    this.state = (\r\n      { \r\n        seconds: 0,\r\n        score: 0,\r\n        poo_level: null,\r\n        play_level: null,\r\n        pet_level: null,\r\n        feed_level: null\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch('http://46.6.2.213:2000/getLevelsById?id=1', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'text/plain',\r\n        }\r\n    }).then((response) => {\r\n      response.text().then((resultText) => {\r\n          var result = JSON.parse(resultText)\r\n          console.log(result)\r\n          this.setState(\r\n            { \r\n              seconds: 0,\r\n              score: result.score,\r\n              poo_level: result.poo_levels,\r\n              play_level: result.play_levels,\r\n              pet_level:result.pet_levels,\r\n              feed_level: result.feed_levels,\r\n            }\r\n          );\r\n        }\r\n      )\r\n    })\r\n  }\r\n  \r\n  async postNewLevel() {\r\n    await fetch('http://46.6.2.213:2000/postLevelsById', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type':'application/json'\r\n        },\r\n        mode: 'no-cors',\r\n        body: `{\"id\": 1,\r\n        \"poo_level\": ${this.state.poo_level},\r\n        \"pet_level\": ${this.state.pet_level},\r\n        \"play_level\": ${this.state.play_level},\r\n        \"feed_level\": ${this.state.feed_level},\r\n        \"score\": ${this.state.score}}`\r\n          \r\n    }).then((response) => {\r\n      console.log(\"success!\")\r\n    })\r\n  }\r\n\r\n  scoreTick(json) {\r\n    let newState = {}\r\n    this.postNewLevel()\r\n    switch(json.label) {\r\n      case 'Clean the poop!':\r\n        newState.poo_level = json.level\r\n        break;\r\n      case 'Play with me!':\r\n        newState.play_level = json.level\r\n      break;\r\n      case 'Feed me!':\r\n        newState.feed_level = json.level\r\n      break;\r\n      case 'Pet me!':\r\n        newState.pet_level = json.level\r\n      break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState((state) =>{ \r\n      newState.score = state.score + json.score\r\n      return newState\r\n    })\r\n  }\r\n\r\n  targetClick(label) {\r\n    console.log(label + \" was clicked!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n          <Grid container spacing={0} justify=\"space-evenly\">\r\n              <Grid item xs={3} xl={2}>\r\n                {this.state.poo_level !== null ? \r\n                <CatStateHandler \r\n                  onTick={this.scoreTick}\r\n                  period=\"1000\"\r\n                  minLevel=\"0\"\r\n                  maxLevel=\"25\"\r\n                  label=\"Clean the poop!\"\r\n                  minActuatorLevel=\"1\"\r\n                  actuatorDecreaseLevel=\"10\"\r\n                  actuatorDecreaseLevelCrit=\"30\"\r\n                  actuatorCritChance=\"50\"\r\n                  actuatorCooldownMs=\"500\"\r\n                  onClick={this.targetClick}\r\n                  probabilityOfIncrease=\"10\"\r\n                  theme={'green'}\r\n                  decrease={false}\r\n                  right={false}\r\n                  icon={winterPoop}\r\n                  initialLevel={this.state.poo_level}\r\n                  />\r\n                  :\r\n                  <div></div>\r\n                }\r\n              </Grid>\r\n              <Grid item xs={3} xl={2}>\r\n              {this.state.poo_level !== null ? \r\n                <CatStateHandler\r\n                  onTick={this.scoreTick} \r\n                  period=\"1000\"\r\n                  minLevel=\"0\"\r\n                  maxLevel=\"25\"\r\n                  label=\"Play with me!\"\r\n                  minActuatorLevel=\"1\"\r\n                  actuatorDecreaseLevel=\"10\"\r\n                  actuatorDecreaseLevelCrit=\"30\"\r\n                  actuatorCritChance=\"50\"\r\n                  actuatorCooldownMs=\"500\"\r\n                  onClick={this.targetClick}\r\n                  probabilityOfIncrease=\"20\"\r\n                  theme={'yellow'}\r\n                  decrease={true}\r\n                  right={true}\r\n                  icon={winterGame}\r\n                  initialLevel={this.state.play_level}\r\n              /> \r\n              :\r\n              <div></div>}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container alignContent=\"center\" justify=\"center\">\r\n              <Grid item xs={12}>\r\n                <Score value={this.state.score}/>\r\n                <Cat logo={logo} name=\"Winter\"/>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={0} justify=\"space-evenly\">\r\n              <Grid item xs={3} xl={2}>\r\n                {this.state.poo_level !== null ? \r\n                <CatStateHandler\r\n                  onTick={this.scoreTick} \r\n                  period=\"300\"\r\n                  minLevel=\"0\"\r\n                  maxLevel=\"25\"\r\n                  label=\"Feed me!\"\r\n                  minActuatorLevel=\"1\"\r\n                  actuatorDecreaseLevel=\"10\"\r\n                  actuatorDecreaseLevelCrit=\"30\"\r\n                  actuatorCritChance=\"50\"\r\n                  actuatorCooldownMs=\"500\"\r\n                  onClick={this.targetClick}\r\n                  probabilityOfIncrease=\"30\"\r\n                  theme={'red'}\r\n                  decrease={true}\r\n                  right={false}\r\n                  icon={winterFood}\r\n                  initialLevel={this.state.feed_level}\r\n                /> \r\n                :\r\n                <div></div>}\r\n              </Grid>\r\n              <Grid item xs={3} xl={2}>\r\n                {this.state.poo_level !== null ? \r\n                <CatStateHandler\r\n                  onTick={this.scoreTick} \r\n                  period=\"300\"\r\n                  minLevel=\"0\"\r\n                  maxLevel=\"25\"\r\n                  label=\"Pet me!\"\r\n                  minActuatorLevel=\"1\"\r\n                  actuatorDecreaseLevel=\"10\"\r\n                  actuatorDecreaseLevelCrit=\"30\"\r\n                  actuatorCritChance=\"50\"\r\n                  actuatorCooldownMs=\"500\"\r\n                  onClick={this.targetClick}\r\n                  probabilityOfIncrease=\"10\"\r\n                  theme={'purple'}\r\n                  decrease={false}\r\n                  right={true}\r\n                  icon={winterPet}\r\n                  initialLevel={this.state.pet_level}\r\n                  /> \r\n                :\r\n                <div></div>}\r\n              </Grid>\r\n            </Grid>\r\n          </header>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/meow.39a5aed0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/winter.23d56473.svg\";","module.exports = __webpack_public_path__ + \"static/media/winterFood.d007ad36.svg\";","module.exports = __webpack_public_path__ + \"static/media/winterPoop.f3a439cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/winterGame.c109ee3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseline-pets-24px.90213864.svg\";"],"sourceRoot":""}